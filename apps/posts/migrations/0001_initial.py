# Generated by Django 4.1.1 on 2022-11-19 13:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="", verbose_name="background")),
                (
                    "title_ru",
                    models.CharField(max_length=256, verbose_name="title russian"),
                ),
                (
                    "title_en",
                    models.CharField(max_length=256, verbose_name="title english"),
                ),
                (
                    "description_ru",
                    models.TextField(verbose_name="description russian"),
                ),
                (
                    "description_en",
                    models.TextField(verbose_name="description english"),
                ),
                (
                    "create_at",
                    models.DateField(auto_now_add=True, verbose_name="created data"),
                ),
                (
                    "beneficiaries",
                    models.PositiveSmallIntegerField(
                        verbose_name="beneficiaries english"
                    ),
                ),
                (
                    "duration_ru",
                    models.CharField(max_length=256, verbose_name="duration russian"),
                ),
                (
                    "location_ru",
                    models.CharField(max_length=256, verbose_name="location russian"),
                ),
                (
                    "participants_ru",
                    models.CharField(
                        max_length=256, verbose_name="participants russian"
                    ),
                ),
                (
                    "duration_en",
                    models.CharField(max_length=256, verbose_name="duration english"),
                ),
                (
                    "location_en",
                    models.CharField(max_length=256, verbose_name="location english"),
                ),
                (
                    "participants_en",
                    models.CharField(
                        max_length=256, verbose_name="participants english"
                    ),
                ),
                (
                    "target_audience_ru",
                    models.CharField(
                        max_length=256, verbose_name="Target audience russian"
                    ),
                ),
                (
                    "target_audience_en",
                    models.CharField(
                        max_length=256, verbose_name="Target audience english"
                    ),
                ),
                (
                    "project_goals_ru",
                    models.TextField(verbose_name="Project goals russian"),
                ),
                (
                    "project_goals_en",
                    models.TextField(verbose_name="Project goals english"),
                ),
            ],
            options={
                "verbose_name": "Пост",
                "verbose_name_plural": "Посты",
                "ordering": ("-create_at",),
            },
        ),
        migrations.CreateModel(
            name="PostType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=256, verbose_name="title russian"),
                ),
                (
                    "title_en",
                    models.CharField(max_length=256, verbose_name="title english"),
                ),
                (
                    "create_at",
                    models.DateField(auto_now_add=True, verbose_name="created data"),
                ),
                ("value", models.CharField(max_length=256, verbose_name="Значение")),
            ],
            options={
                "verbose_name": "Тип поста",
                "verbose_name_plural": "Типы постов",
            },
        ),
        migrations.CreateModel(
            name="PostSocial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "social",
                    models.CharField(
                        choices=[
                            ("facebook", "Facebook"),
                            ("instagram", "Instagram"),
                            ("youtube", "Youtube"),
                        ],
                        max_length=256,
                        verbose_name="Социальная сеть",
                    ),
                ),
                ("link", models.URLField(verbose_name="ссылка на статью")),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_socials",
                        to="posts.post",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="post",
            name="post_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="post_type",
                to="posts.posttype",
                verbose_name="post type",
            ),
        ),
    ]
